{"version":3,"sources":["components/countdown/Renderer.js","components/newsletter/SubscribeEmail.js","pages/comingSoon.js","pages/index.js","App.js","serviceWorker.js","index.js"],"names":["Renderer","days","hours","minutes","seconds","className","CustomForm","email","status","message","onValidated","ref","node","type","placeholder","required","onClick","value","indexOf","EMAIL","dangerouslySetInnerHTML","__html","SubscribeEmail","mailchimpUrl","url","render","subscribe","formData","ComingSoon","Helmet","href","rel","style","backgroundImage","process","to","date","Date","renderer","target","src","getFullYear","LandingPage","props","state","Component","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.672ca3f8.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\n\r\nconst Renderer = ({ days, hours, minutes, seconds }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"single-countdown\">\r\n        <span className=\"single-countdown__time\">{days}</span>\r\n        <span className=\"single-countdown__text\">Days</span>\r\n      </div>\r\n      <div className=\"single-countdown\">\r\n        <span className=\"single-countdown__time\">{hours}</span>\r\n        <span className=\"single-countdown__text\">Hours</span>\r\n      </div>\r\n      <div className=\"single-countdown\">\r\n        <span className=\"single-countdown__time\">{minutes}</span>\r\n        <span className=\"single-countdown__text\">Minutes</span>\r\n      </div>\r\n      <div className=\"single-countdown\">\r\n        <span className=\"single-countdown__time\">{seconds}</span>\r\n        <span className=\"single-countdown__text\">Seconds</span>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRenderer.propTypes = {\r\n  days: PropTypes.number,\r\n  hours: PropTypes.number,\r\n  minutes: PropTypes.number,\r\n  seconds: PropTypes.number\r\n};\r\n\r\nexport default Renderer;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\r\n\r\nconst CustomForm = ({ status, message, onValidated }) => {\r\n  let email;\r\n  const submit = () => {\r\n    email &&\r\n      email.value.indexOf(\"@\") > -1 &&\r\n      onValidated({\r\n        EMAIL: email.value\r\n      });\r\n    email.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mc-newsletter-form space-mb--10\">\r\n        <input\r\n          ref={node => (email = node)}\r\n          type=\"email\"\r\n          placeholder=\"Enter email here\"\r\n          required\r\n        />\r\n        <button onClick={submit}>NOTIFY ME</button>\r\n      </div>\r\n\r\n      <div className=\"mailchimp-alerts\">\r\n        {status === \"sending\" && (\r\n          <div className=\"mailchimp-submitting\">sending...</div>\r\n        )}\r\n        {status === \"error\" && (\r\n          <div\r\n            className=\"mailchimp-error\"\r\n            dangerouslySetInnerHTML={{ __html: message }}\r\n          />\r\n        )}\r\n        {status === \"success\" && (\r\n          <div\r\n            className=\"mailchimp-success\"\r\n            dangerouslySetInnerHTML={{ __html: message }}\r\n          />\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst SubscribeEmail = ({ mailchimpUrl }) => {\r\n  return (\r\n    <div>\r\n      <MailchimpSubscribe\r\n        url={mailchimpUrl}\r\n        render={({ subscribe, status, message }) => (\r\n          <CustomForm\r\n            status={status}\r\n            message={message}\r\n            onValidated={formData => subscribe(formData)}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSubscribeEmail.propTypes = {\r\n  mailchimpUrl: PropTypes.string\r\n};\r\n\r\nexport default SubscribeEmail;\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { ReactSVG } from \"react-svg\";\r\nimport Countdown from \"react-countdown\";\r\nimport Renderer from \"../components/countdown/Renderer\";\r\nimport SubscribeEmail from \"../components/newsletter/SubscribeEmail\";\r\n\r\nconst ComingSoon = () => {\r\n  return (\r\n    <Fragment>\r\n      <Helmet>\r\n        <link\r\n          href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&family=Roboto:wght@400;500&display=swap\"\r\n          rel=\"stylesheet\"\r\n        />\r\n      </Helmet>\r\n      <div\r\n        className=\"cs-14-page-wrapper h-100 bg-img d-flex flex-column justify-content-between\"\r\n        style={{\r\n          backgroundImage: `url(${process.env.PUBLIC_URL +\r\n            \"/assets/img/backgrounds/coming-soon-14.jpg\"})`\r\n        }}\r\n      >\r\n        {/*====================  header ====================*/}\r\n        <header className=\"cs-14-header space-pt--30 space-pb--30\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                {/* logo */}\r\n                <div className=\"cs-14-logo\">\r\n                  <Link to={process.env.PUBLIC_URL + \"/\"}>\r\n                    <h2 className=\"cs-14-content__title\">\r\n                      Smart Gate Soft\r\n                    </h2>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {/*====================  End of header  ====================*/}\r\n        {/*====================  content ====================*/}\r\n        <div className=\"cs-14-content\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-8\">\r\n                <h3 className=\"cs-14-content__subtitle space-mb--10\">\r\n                  Stay tuned for something amazing\r\n                </h3>\r\n                <h2 className=\"cs-14-content__title\">\r\n                  We are coming <br /> very soon\r\n                </h2>\r\n                {/* countdown */}\r\n                <div className=\"cs-14-countdown space-mt--50\">\r\n                  <Countdown\r\n                    date={new Date(\"April 05, 2021 12:12:00\")}\r\n                    renderer={Renderer}\r\n                  />\r\n                </div>\r\n                <div className=\"cs-14-subscription-wrapper space-mt--50\">\r\n                  {/* subscribe email */}\r\n                  <SubscribeEmail mailchimpUrl=\"https://devitems.us11.list-manage.com/subscribe/post?u=6bbb9b6f5827bd842d9640c82&amp;id=05d85f18ef\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/*====================  End of content  ====================*/}\r\n        {/*====================  footer ====================*/}\r\n        <footer className=\"cs-14-footer space-pt--25 space-pb--25\">\r\n          <div className=\"container\">\r\n            <div className=\"row align-items-center\">\r\n              <div className=\"col-12 col-md-6\">\r\n                {/* social icons */}\r\n                <ul className=\"cs-14-social-icons d-flex align-items-center justify-content-center justify-content-md-start\">\r\n                  <li>\r\n                    <a\r\n                      href=\"http://www.facebook.com\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      <ReactSVG\r\n                        src={\r\n                          process.env.PUBLIC_URL +\r\n                          \"/assets/img/icons/facebook-01.svg\"\r\n                        }\r\n                      />\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\"http://www.twitter.com\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      <ReactSVG\r\n                        src={\r\n                          process.env.PUBLIC_URL +\r\n                          \"/assets/img/icons/twitter-01.svg\"\r\n                        }\r\n                      />\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\"http://www.instagram.com\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      <ReactSVG\r\n                        src={\r\n                          process.env.PUBLIC_URL +\r\n                          \"/assets/img/icons/instagram-01.svg\"\r\n                        }\r\n                      />\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\"http://www.linkedin.com\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      <ReactSVG\r\n                        src={\r\n                          process.env.PUBLIC_URL +\r\n                          \"/assets/img/icons/linkedin-01.svg\"\r\n                        }\r\n                      />\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\"http://www.youtube.com\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      <ReactSVG\r\n                        src={\r\n                          process.env.PUBLIC_URL +\r\n                          '/\"assets/img/icons/youtube-01.svg'\r\n                        }\r\n                      />\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"col-12 col-md-6\">\r\n                {/* copyright */}\r\n                <div className=\"cs-14-copyright text-right\">\r\n                  &copy; {new Date().getFullYear() + \" \"}\r\n                  <a\r\n                    href=\"https://github.com/EbrahemAbdraboh\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    Ebrahem Abdraboh\r\n                  </a>\r\n                  , all rights reserved\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n        {/*====================  End of footer  ====================*/}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ComingSoon;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport ComingSoon from \"./comingSoon\";\r\n\r\nclass LandingPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <ComingSoon />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LandingPage;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./assets/scss/style.scss\";\n\n\nimport LandingPage from \"./pages\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route\n          exact\n          path={process.env.PUBLIC_URL + \"/\"}\n          component={LandingPage}\n        />\n\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}